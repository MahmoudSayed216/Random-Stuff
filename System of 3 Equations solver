// this code can be improved so that it can solve systems with more then 3 unknows 
// this is an algorithm that applies  "gaussian elimination" which is a method of solving systems of equations

#include <iostream>
using namespace std;

const int s = 4;
void get_info_and_solve();
void mainMenu();

void fillArray(float ar[],int SIZE)
{
    for (int i = 0; i < SIZE; i++)
    {
        cin >> ar[i];
    }
}

void CopyArrays(float ar1[],float ar2[],int SIZE)
{
    for (int i = 0; i < SIZE; i++)
    {
        ar1[i] = ar2[i];
    }
}

void SystemOf3Equation(float R1[],float R2[],float R3[])
{

        float RC1[s];   CopyArrays(RC1,R1,s);
        float RC2[s];   CopyArrays(RC2,R2,s);
        float RC3[s];   CopyArrays(RC3,R3,s);


        float operation = -(R2[0]/R1[0]);
        for (int i = 0; i<4;i++)
        {
            R2[i]=operation*R1[i]+R2[i];
        }

        float operation2 = -(R3[0]/R1[0]);
        for (int  j = 0; j < 4; j++)
        {
            R3[j] = operation2*R1[j] + R3[j];
        }
        float operation3 = -(R3[1]/R2[1]);
        for (int k = 0; k < 4 ;k++)
        {
            R3[k] = operation3*R2[k]+R3[k];
        }

        float Z = R3[3]/R3[2];
        float Y = (R2[3]-Z*R2[2])/R2[1];
        float X = (R1[3]-R1[2]*Z - R1[1]*Y)/R1[0];

        system("CLS");

        cout << "X = " << X << ", Y = " << Y << ", Z = " << Z<< endl;
        cout << endl;
    //////////////////////////////////////////////////////
    //  Now substitute by x, y ,z in the main equations//
    /////////////////////////////////////////////////////
    cout << "Substituting in the main equations we get: " << endl<< endl;

    cout << "Equation 1: " << endl;
    cout << RC1[0] << "(" << X << ") + " << RC1[1] << "(" << Y << ") + " << RC1[2] << "(" << Z << ") = " <<
    RC1[0]*X + RC1[1]*Y + RC1[2]*Z << endl << endl;;

    cout << "Equation 2: " << endl;
    cout << RC2[0] << "(" << X << ") + " << RC2[1] << "(" << Y << ") + " << RC2[2] << "(" << Z << ") = " <<
    RC2[0]*X + RC2[1]*Y + RC2[2]*Z << endl<< endl;

    cout << "Equation 3: " << endl;
    cout << RC3[0] << "(" << X << ") + " << RC3[1] << "(" << Y << ") + " << RC3[2] << "(" << Z << ") = " <<
    RC3[0]*X + RC3[1]*Y + RC3[2]*Z<<endl<<endl;
}

void printArray(float ar[],int SIZE)
{
    for (int i = 0 ; i < SIZE; i++)
    {
        cout << ar[i] << " ";
    }
    cout << endl;
}

void get_info_and_solve()
{
    float ar1[s] = {};
    float ar2[s] = {};
    float ar3[s] = {};
    cout << "Equation 1: ";
    fillArray(ar1,4);
    cout << "Equation 2: ";
    fillArray(ar2,4);
    cout << "Equation 3: ";
    fillArray(ar3,4);
    cout << endl;

    SystemOf3Equation(ar1,ar2,ar3);

}
void how_to_use()
{
     cout << endl;
     cout << "If you want to input an Equation e.g. 2x +6y +8z = -9" << endl;
     cout << "use the following format" << endl;
     cout << "Equation 1: 2 6 8 -9" << endl<<endl;
     cout << "Note: Floats are allowed" << endl << endl;
     cout << "Note 2: if an equation is equal to zero e.g. 3x + 7y - 2z = 0\n";
     cout << "The program will give you a strange output in the substitution part such as \n"
     " -5.96064e-8 which translates to -5.96064 * 10^-8, which is approximately zero. so don't freak out ";
     cout << endl<<endl;
    system("pause");
        mainMenu();

}
void mainMenu()
{
    k:
    system("CLS");
    int choice;

    cout << "1- solve a system of equations" << endl;
    cout << "2- how to use" << endl;
    cout << "3- exit" << endl;
    cin >> choice;
    if(choice == 1)
    {   m:
        get_info_and_solve();
            cout << "input 1 to solve another equation " << endl;
            cout << "input 2 to exit" << endl;
            int input;
            cin >> input;
            system("CLS");
            if (input == 1)
                goto m;
            else
               goto j;

    }
    else if (choice == 2)
        how_to_use();

    else
    {
        j:
        exit(1);
    }
}

int main()
{

    mainMenu();


}



